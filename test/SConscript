import os.path
from SConfig import *
Import('environment')
Import('opensslLibPath')
Import('curlLibPath')

testSources = ['gmock-gtest-all.cc'] +\
    Glob('*.cpp')

testEnvironment = environment.Clone(CCFLAGS = ['-std=c++0x', '-g', '-O0'], LIBS = [LIB_TARGET])

if testEnvironment['PLATFORM'] == 'posix':
    testEnvironment.Append(LIBS = ['curl', 'crypto'])
else:
    testEnvironment.Append(LIBS = ['curldll', 'wsock32', 'eay32'])
    
libPath = ['#' + os.path.join(BUILD_DIR, DEBUG_CONFIG), opensslLibPath, curlLibPath]

testEnvironment.Append(LIBS = ['pthread'], LIBPATH = libPath, 
    CPPPATH = ['#src', '#include', '.'])

test = testEnvironment.Program(target = TEST_TARGET, source = testSources)
testInstallPath = '#' + os.path.join(OUTPUT_DIR, TEST_CONFIG)
testEnvironment.Install(testInstallPath, test)

testRunPath = os.path.join(OUTPUT_DIR, TEST_CONFIG, TEST_TARGET)
if testEnvironment['PLATFORM'] == 'win32':
    testRunPath += '.exe'

testRun = testEnvironment.Command(target = 'testRun', source = testSources, action = testRunPath)
Depends( testRun, test )
AlwaysBuild(testRun)
